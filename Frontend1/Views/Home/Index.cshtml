@using Business.Concrete
@using DataAccess.Concrete

@{
    ViewData["Title"] = "Bölüm Yönetimi";
    BolumManager bolumManager = new BolumManager(new BolumDal());
    var list = bolumManager.GetList();
}
<div class="container mt-5">
    <h2>Tablo - Düzenleme ve Silme İşlemi</h2>
    <table class="table table-bordered" id="dataTable">
        <thead class="table-light">
            <tr>
                <th style="width: 20%;">Id</th>
                <th>Bölüm Adı</th>
                <th>İşlem</th>
                <th><button id="addRowBtn" type="button" class="btn btn-secondary">Ekle</button></th>
            </tr>
        </thead>
        @{
            ViewData["Title"] = "Home Page";
            foreach (var item in list)
            {
                <tbody class="table-group-divider">
                    <tr>
                        <th scope="row">@item.Id</th>
                        <td>@item.BolumAdi</td>
                        <td>
                            <button class="btn btn-warning btn-sm edit-btn">Düzenle</button>
                            <button class="btn btn-danger btn-sm delete-btn">Sil</button>
                        </td>
                    </tr>
                </tbody>
            }
        }
        <tbody class="table-group-divider" style="display: none;" id="inputRow">
            <tr>
                <th scope="row"></th>
                <td>
                    <div class="container-fluid">
                        <div class="row">
                            <div class="col-11">
                                <input type="text" id="sectionName" class="form-control" />
                            </div>
                            <div class="col-1">
                                <button class="btn" id="submitBtn">
                                    <strong>
                                        +
                                    </strong>
                                </button>
                            </div>
                        </div>
                    </div>
                </td>
            </tr>
        </tbody>
    </table>
</div>

<script>
    // Ekle butonuna tıklanınca input satırını göster
    document.getElementById("addRowBtn").addEventListener("click", function() {
        document.getElementById("inputRow").style.display = "table-row-group";
    });

    // Submit butonuna tıklanınca veri gönder
    document.getElementById("submitBtn").addEventListener("click", function() {
        var sectionName = document.getElementById("sectionName").value;

        if (sectionName) {
            fetch('/Home/YeniBolumEkle', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(sectionName)
            })
            .then(response => response.json())
            .then(data => {
                // Yeni veri eklendikten sonra inputu temizle ve gizle
                document.getElementById("sectionName").value = '';
                document.getElementById("inputRow").style.display = "none";
                alert("Bölüm başarıyla eklendi!");
            });
        }
    });
    // Düzenleme butonuna tıklama işlemi
        document.querySelectorAll(".edit-btn").forEach(button => {
            button.addEventListener("click", function() {
                const row = this.closest("tr");  // Butona tıklanan satırı al
                const idCell = row.querySelector("td:nth-child(1)");  // Id hücresini al
                const nameCell = row.querySelector("td:nth-child(2)");  // Bölüm adı hücresini al

                const id = idCell.textContent;  // Id'yi al (değiştirilemez)
                const currentName = nameCell.textContent;  // Bölüm Adı'nı al

                // Bölüm adı hücresini input ile değiştir
                const inputField = document.createElement("input");
                inputField.classList.add("form-control");
                inputField.value = currentName;
                nameCell.innerHTML = '';  // Hücreyi temizle
                nameCell.appendChild(inputField);  // Input alanını ekle

                // Düzenle butonunu değiştir
                this.textContent = "Kaydet";
                this.classList.remove("btn-warning");
                this.classList.add("btn-success");

                // Kaydet butonuna tıklama işlemi
                this.addEventListener("click", function() {
                    const newName = inputField.value.trim();

                    if (newName === "") {
                        alert("Bölüm adı boş olamaz.");
                        return;
                    }

                    // Değiştirilen değer ile tabloyu güncelle
                    nameCell.innerHTML = newName;  // Yeni bölümü yaz

                    // Buton stilini ve metnini eski haline getir
                    this.textContent = "Düzenle";
                    this.classList.remove("btn-success");
                    this.classList.add("btn-warning");
                });
            });
        });

        // Silme butonuna tıklama işlemi
        document.querySelectorAll(".delete-btn").forEach(button => {
            button.addEventListener("click", function() {
                const row = this.closest("tr");  // Butona tıklanan satırı al

                // Silme onayı al
                const confirmation = confirm("Bu bölümü silmek istediğinizden emin misiniz?");
                if (confirmation) {
                    row.remove();  // Satırı sil
                }
            });
        });

</script>