@using Core.Utilities.Results
@using Entity.Concrete
@using Entity.DTOs
@{
    ViewData["Title"] = "Bölüm-Ders-Akademik Personel Yönetimi";
    var bolumler = ViewData["Bolumler"] as IDataResult<List<Bolum>>;
    var dersler = ViewData["Dersler"] as IDataResult<List<Ders>>;
    var akademikPersoneller = ViewData["APler"] as IDataResult<List<AkademikPersonel>>;
    var bolumDersAkademikPersonelEslestirmeleri = ViewData["BDAP"] as IDataResult<List<DersBolumAkademikPersonelDTO>>;
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">Bölüm-Ders-Akademik Personel Listesi</h3>
                    <div class="card-tools">
                        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#bdapModal">
                            <i class="bi bi-plus-circle"></i> Yeni Eşleştirme Ekle
                        </button>
                    </div>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table id="bdapTable" class="table table-bordered table-striped">
                            <thead>
                                <tr>
                                    <th>ID</th>
                                    <th>Bölüm</th>
                                    <th>Ders</th>
                                    <th>Akademik Personel</th>
                                    <th>İşlemler</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (bolumDersAkademikPersonelEslestirmeleri.Success)
                                {
                                    foreach (var item in bolumDersAkademikPersonelEslestirmeleri.Data)
                                    {
                                        <tr>
                                            <td>@item.Id</td>
                                            <td>@item.BolumAd</td>
                                            <td>@item.DersAd</td>
                                            <td>@item.AkademikPersonelAd (@item.Unvan)</td>
                                            <td>
                                                <button class="btn btn-sm btn-info edit-bdap" data-id="@item.Id">
                                                    <i class="bi bi-pencil"></i> Düzenle
                                                </button>
                                                <button class="btn btn-sm btn-danger delete-bdap" data-id="@item.Id">
                                                    <i class="bi bi-trash"></i> Sil
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="5" class="text-center">@bolumDersAkademikPersonelEslestirmeleri.Message</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- BDAP Modal -->
<div class="modal fade" id="bdapModal" tabindex="-1" aria-labelledby="bdapModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="bdapModalLabel">Bölüm-Ders-Akademik Personel Eşleştirme</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="bdapForm">
                    <input type="hidden" id="bdapId" />
                    <div class="mb-3">
                        <label for="bolumId" class="form-label">Bölüm</label>
                        <select class="form-control" id="bolumId" required>
                            <option value="">Bölüm Seçiniz</option>
                            @foreach (var bolum in bolumler.Data)
                            {
                                <option value="@bolum.Id">@bolum.Ad</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="dersId" class="form-label">Ders</label>
                        <select class="form-control" id="dersId" required>
                            <option value="">Ders Seçiniz</option>
                            @foreach (var ders in dersler.Data)
                            {
                                <option value="@ders.Id">@ders.Ad</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="akademikPersonelId" class="form-label">Akademik Personel</label>
                        <select class="form-control" id="akademikPersonelId" required>
                            <option value="">Akademik Personel Seçiniz</option>
                            @foreach (var personel in akademikPersoneller.Data)
                            {
                                <option value="@personel.Id">@personel.Ad (@personel.Unvan)</option>
                            }
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">İptal</button>
                <button type="button" class="btn btn-primary" id="saveBdap">Kaydet</button>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .table-responsive {
            overflow-x: auto;
        }
        .btn-sm {
            padding: 0.25rem 0.5rem;
            font-size: 0.875rem;
        }
        .card-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        .card-tools {
            display: flex;
            gap: 0.5rem;
        }
    </style>
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            console.log("DOM yüklendi");
            
            // DataTable initialization
            var table = $('#bdapTable').DataTable({
                "language": {
                    "url": "//cdn.datatables.net/plug-ins/1.10.24/i18n/Turkish.json"
                },
                "responsive": true,
                "autoWidth": false
            });

            // Yeni BDAP ekleme
            document.getElementById('saveBdap').addEventListener('click', function() {
                var bdap = {
                    Id: parseInt(document.getElementById('bdapId').value) || 0,
                    BolumId: parseInt(document.getElementById('bolumId').value),
                    DersId: parseInt(document.getElementById('dersId').value),
                    AkademikPersonelId: parseInt(document.getElementById('akademikPersonelId').value)
                };

                console.log("Kaydedilecek BDAP:", bdap);

                var url = bdap.Id > 0 ? '/BolumDersAkademikPersonel/Update' : '/BolumDersAkademikPersonel/Add';
                var method = 'POST';

                $.ajax({
                    url: url,
                    type: method,
                    contentType: 'application/json',
                    data: JSON.stringify(bdap),
                    success: function (response) {
                        console.log("Sunucu yanıtı:", response);
                        if (response.success) {
                            Swal.fire({
                                title: 'Başarılı!',
                                text: response.message,
                                icon: 'success',
                                timer: 1500,
                                showConfirmButton: false
                            }).then(() => {
                                location.reload();
                            });
                        } else {
                            Swal.fire({
                                title: 'Hata!',
                                text: response.message,
                                icon: 'error'
                            });
                        }
                    },
                    error: function (xhr) {
                        console.error("Sunucu hatası:", xhr);
                        Swal.fire({
                            title: 'Hata!',
                            text: 'Bir hata oluştu: ' + xhr.responseText,
                            icon: 'error'
                        });
                    }
                });
            });

            // BDAP düzenleme
            document.querySelectorAll('.edit-bdap').forEach(function(button) {
                button.addEventListener('click', function() {
                    console.log("Düzenle butonuna tıklandı");
                    var id = this.getAttribute('data-id');
                    console.log("Düzenlenecek BDAP ID:", id);
                    
                    $.ajax({
                        url: '/BolumDersAkademikPersonel/GetDetail/' + id,
                        type: 'GET',
                        success: function(response) {
                            console.log("Gelen BDAP verisi:", response);
                            if (response.success) {
                                var bdap = response.data;
                                document.getElementById('bdapId').value = bdap.id;
                                document.getElementById('bolumId').value = bdap.bolumId;
                                document.getElementById('dersId').value = bdap.dersId;
                                document.getElementById('akademikPersonelId').value = bdap.akademikPersonelId;
                                
                                var modal = new bootstrap.Modal(document.getElementById('bdapModal'));
                                modal.show();
                            } else {
                                Swal.fire({
                                    title: 'Hata!',
                                    text: response.message,
                                    icon: 'error'
                                });
                            }
                        },
                        error: function(xhr) {
                            console.error("BDAP getirme hatası:", xhr);
                            Swal.fire({
                                title: 'Hata!',
                                text: 'BDAP bilgileri alınamadı: ' + xhr.responseText,
                                icon: 'error'
                            });
                        }
                    });
                });
            });

            // BDAP silme
            document.querySelectorAll('.delete-bdap').forEach(function(button) {
                button.addEventListener('click', function() {
                    console.log("Sil butonuna tıklandı");
                    var id = this.getAttribute('data-id');
                    Swal.fire({
                        title: 'Emin misiniz?',
                        text: "Bu eşleştirmeyi silmek istediğinizden emin misiniz?",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Evet, sil!',
                        cancelButtonText: 'İptal'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            $.ajax({
                                url: '/BolumDersAkademikPersonel/Delete',
                                type: 'POST',
                                contentType: 'application/json',
                                data: JSON.stringify({ Id: id }),
                                success: function (response) {
                                    if (response.success) {
                                        Swal.fire({
                                            title: 'Başarılı!',
                                            text: response.message,
                                            icon: 'success',
                                            timer: 1500,
                                            showConfirmButton: false
                                        }).then(() => {
                                            location.reload();
                                        });
                                    } else {
                                        Swal.fire({
                                            title: 'Hata!',
                                            text: response.message,
                                            icon: 'error'
                                        });
                                    }
                                },
                                error: function (xhr) {
                                    Swal.fire({
                                        title: 'Hata!',
                                        text: 'Bir hata oluştu: ' + xhr.responseText,
                                        icon: 'error'
                                    });
                                }
                            });
                        }
                    });
                });
            });

            // Modal kapandığında formu temizle
            document.getElementById('bdapModal').addEventListener('hidden.bs.modal', function () {
                document.getElementById('bdapForm').reset();
                document.getElementById('bdapId').value = '';
            });
        });
    </script>
}