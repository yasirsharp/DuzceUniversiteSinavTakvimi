@using Business.Concrete
@using DataAccess.Concrete
@using Entity.Concrete

@model IEnumerable<Entity.Concrete.Bolum>

@{
    ViewData["Title"] = "Bölüm Yönetimi";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">Bölüm Listesi</h3>
                    <div class="card-tools">
                        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#bolumModal">
                            <i class="bi bi-plus-circle"></i> Yeni Bölüm
                        </button>
                    </div>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table id="bolumTable" class="table table-bordered table-striped">
                            <thead>
                                <tr>
                                    <th>ID</th>
                                    <th>Bölüm Adı</th>
                                    <th>İşlemler</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var bolum in Model)
                                {
                                    <tr>
                                        <td>@bolum.Id</td>
                                        <td>@bolum.Ad</td>
                                        <td>
                                            <button class="btn btn-sm btn-info edit-bolum" data-id="@bolum.Id">
                                                <i class="bi bi-pencil"></i> Düzenle
                                            </button>
                                            <button class="btn btn-sm btn-danger delete-bolum" data-id="@bolum.Id">
                                                <i class="bi bi-trash"></i> Sil
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Bölüm Modal -->
<div class="modal fade" id="bolumModal" tabindex="-1" aria-labelledby="bolumModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="bolumModalLabel">Bölüm</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="bolumForm">
                    <input type="hidden" id="bolumId" />
                    <div class="mb-3">
                        <label for="bolumAd" class="form-label">Bölüm Adı</label>
                        <input type="text" class="form-control" id="bolumAd" required>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">İptal</button>
                <button type="button" class="btn btn-primary" id="saveBolum">Kaydet</button>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .table-responsive {
            overflow-x: auto;
        }
        .btn-sm {
            padding: 0.25rem 0.5rem;
            font-size: 0.875rem;
        }
        .card-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        .card-tools {
            display: flex;
            gap: 0.5rem;
        }
    </style>
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            console.log("DOM yüklendi");
            
            // DataTable initialization
            var table = $('#bolumTable').DataTable({
                "language": {
                    "url": "//cdn.datatables.net/plug-ins/1.10.24/i18n/Turkish.json"
                },
                "responsive": true,
                "autoWidth": false
            });

            // Yeni bölüm ekleme
            document.getElementById('saveBolum').addEventListener('click', function() {
                var bolum = {
                    Id: parseInt(document.getElementById('bolumId').value) || 0,
                    Ad: document.getElementById('bolumAd').value
                };

                console.log("Kaydedilecek bölüm:", bolum);

                var url = bolum.Id > 0 ? '/Bolum/Update' : '/Bolum/Add';
                var method = 'POST';

                $.ajax({
                    url: url,
                    type: method,
                    contentType: 'application/json',
                    data: JSON.stringify(bolum),
                    success: function (response) {
                        console.log(response);
                        if (response.Success) {
                            Swal.fire({
                                title: 'Başarılı!',
                                text: response.Message,
                                icon: 'success',
                                timer: 1500,
                                showConfirmButton: false
                            }).then(() => {
                                location.reload();
                            });
                        } else {
                            Swal.fire({
                                title: 'Hata!',
                                text: response.Message,
                                icon: 'error'
                            });
                        }
                    },
                    error: function (xhr) {
                        Swal.fire({
                            title: 'Hata!',
                            text: 'Bir hata oluştu: ' + xhr.responseText,
                            icon: 'error'
                        });
                    }
                });
            });

            // Bölüm düzenleme
            document.querySelectorAll('.edit-bolum').forEach(function(button) {
                button.addEventListener('click', function() {
                    console.log("Düzenle butonuna tıklandı");
                    var id = this.getAttribute('data-id');
                    console.log("Düzenlenecek bölüm ID:", id);
                    
                    $.ajax({
                        url: '/Bolum/GetById/' + id,
                        type: 'GET',
                        success: function(response) {
                            console.log("Gelen bölüm verisi:", response);
                            if (response.Success) {
                                var bolum = response.Data;
                                console.log("Gelen bölüm verisi:", bolum);
                                document.getElementById('bolumId').value = bolum.Id;
                                document.getElementById('bolumAd').value = bolum.Ad;
                                
                                var modal = new bootstrap.Modal(document.getElementById('bolumModal'));
                                modal.show();
                            } else {
                                Swal.fire({
                                    title: 'Hata!',
                                    text: response.Message,
                                    icon: 'error'
                                });
                            }
                        },
                        error: function(xhr) {
                            console.error("Bölüm getirme hatası:", xhr);
                            Swal.fire({
                                title: 'Hata!',
                                text: 'Bölüm bilgileri alınamadı: ' + xhr.responseText,
                                icon: 'error'
                            });
                        }
                    });
                });
            });

            // Bölüm silme
            document.querySelectorAll('.delete-bolum').forEach(function(button) {
                button.addEventListener('click', function() {
                    console.log("Sil butonuna tıklandı");
                    var id = this.getAttribute('data-id');
                    Swal.fire({
                        title: 'Emin misiniz?',
                        text: "Bu bölümü silmek istediğinizden emin misiniz?",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Evet, sil!',
                        cancelButtonText: 'İptal'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            $.ajax({
                                url: '/Bolum/Delete',
                                type: 'POST',
                                contentType: 'application/json',
                                data: JSON.stringify({ Id: id }),
                                success: function (response) {
                                    if (response.Success) {
                                        Swal.fire({
                                            title: 'Başarılı!',
                                            text: response.Message,
                                            icon: 'success',
                                            timer: 1500,
                                            showConfirmButton: false
                                        }).then(() => {
                                            location.reload();
                                        });
                                    } else {
                                        Swal.fire({
                                            title: 'Hata!',
                                            text: response.Message,
                                            icon: 'error'
                                        });
                                    }
                                },
                                error: function (xhr) {
                                    Swal.fire({
                                        title: 'Hata!',
                                        text: 'Bir hata oluştu: ' + xhr.responseText,
                                        icon: 'error'
                                    });
                                }
                            });
                        }
                    });
                });
            });

            // Modal kapandığında formu temizle
            document.getElementById('bolumModal').addEventListener('hidden.bs.modal', function () {
                document.getElementById('bolumForm').reset();
                document.getElementById('bolumId').value = '';
            });
        });
    </script>
}