@using Core.Utilities.Results
@using Entity.Concrete
@using Entity.DTOs
@using Microsoft.AspNetCore.Html
@{
    ViewData["Title"] = "Sınav Takvimi";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">Sınav Takvimi</h3>
                    <div class="card-tools">
                        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#sinavModal">
                            <i class="fas fa-plus"></i> Yeni Sınav Ekle
                        </button>
                    </div>
                </div>
                <div class="card-body">
                    <div id="calendar"></div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Sınav Ekleme/Düzenleme Modal -->
<div class="modal fade" id="sinavModal" tabindex="-1" aria-labelledby="sinavModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="sinavModalLabel">Sınav Bilgileri</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="sinavForm">
                    <input type="hidden" id="sinavId" />
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="dbapId">Ders-Bölüm-Akademik Personel</label>
                                <select class="form-control" id="dbapId" required>
                                    <option value="">Seçiniz</option>
                                    @foreach (var item in ViewData["DBAPDetail"] as IEnumerable<Entity.DTOs.DersBolumAkademikPersonelDTO>)
                                    {
                                        <option value="@item.Id">@item.DersAd - @item.BolumAd - @item.AkademikPersonelAd</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="sinavTarihi">Sınav Tarihi</label>
                                <input type="date" class="form-control" id="sinavTarihi" required>
                            </div>
                        </div>
                    </div>
                    <div class="row mt-3">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="baslangicSaati">Başlangıç Saati</label>
                                <input type="time" class="form-control" id="baslangicSaati" required>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="bitisSaati">Bitiş Saati</label>
                                <input type="time" class="form-control" id="bitisSaati" required>
                            </div>
                        </div>
                    </div>
                    <div class="row mt-3">
                        <div class="col-12">
                            <div class="form-group">
                                <label>Derslik ve Gözetmenler</label>
                                <div id="derslikContainer">
                                    <div class="derslik-item mb-2">
                                        <div class="row">
                                            <div class="col-md-6">
                                                <select class="form-control derslik-select" required>
                                                    <option value="">Derslik Seçiniz</option>
                                                    @foreach (var item in ViewData["Derslikler"] as IEnumerable<Entity.Concrete.Derslik>)
                                                    {
                                                        <option value="@item.Id">@item.Ad (Kapasite: @item.Kapasite)</option>
                                                    }
                                                </select>
                                            </div>
                                            <div class="col-md-6">
                                                <select class="form-control gozetmen-select">
                                                    <option value="">Gözetmen Seçiniz (Opsiyonel)</option>
                                                    @foreach (var item in ViewData["AkademikPersoneller"] as IEnumerable<Entity.Concrete.AkademikPersonel>)
                                                    {
                                                        <option value="@item.Id">@item.Ad @item.Unvan</option>
                                                    }
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <button type="button" class="btn btn-secondary mt-2" id="addDerslik">
                                    <i class="fas fa-plus"></i> Derslik Ekle
                                </button>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">İptal</button>
                <button type="button" class="btn btn-primary" id="saveSinav">Kaydet</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.10/index.global.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            var calendarEl = document.getElementById('calendar');
            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                locale: 'tr',
                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay'
                },
                events: '/SinavDetay/GetEvents',
                eventClick: function(info) {
                    showEventDetails(info.event);
                },
                dateClick: function(info) {
                    openModalForNewEvent(info.date);
                },
                eventDrop: function(info) {
                    updateEvent(info.event);
                },
                eventResize: function(info) {
                    updateEvent(info.event);
                }
            });
            calendar.render();

            // Derslik ekleme butonu
            document.getElementById('addDerslik').addEventListener('click', function() {
                var template = document.querySelector('.derslik-item').cloneNode(true);
                var removeButton = document.createElement('button');
                removeButton.type = 'button';
                removeButton.className = 'btn btn-danger btn-sm mt-2';
                removeButton.innerHTML = '<i class="fas fa-trash"></i> Sil';
                removeButton.onclick = function() {
                    template.remove();
                };
                template.appendChild(removeButton);
                document.getElementById('derslikContainer').appendChild(template);
            });

            // Modal kapatıldığında formu temizle
            document.getElementById('sinavModal').addEventListener('hidden.bs.modal', function() {
                document.getElementById('sinavForm').reset();
                document.getElementById('sinavId').value = '';
                var container = document.getElementById('derslikContainer');
                while (container.children.length > 1) {
                    container.removeChild(container.lastChild);
                }
            });

            // Kaydet butonu
            document.getElementById('saveSinav').addEventListener('click', function() {
                var formData = getFormData();
                if (!formData) return;

                var url = formData.id ? '/SinavDetay/Update' : '/SinavDetay/Add';
                var method = formData.id ? 'PUT' : 'POST';

                fetch(url, {
                    method: method,
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(formData)
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Başarılı!',
                            text: data.message
                        });
                        calendar.refetchEvents();
                        bootstrap.Modal.getInstance(document.getElementById('sinavModal')).hide();
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Hata!',
                            text: data.message
                        });
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Hata!',
                        text: 'Bir hata oluştu: ' + error.message
                    });
                });
            });

            function getFormData() {
                var derslikler = [];
                document.querySelectorAll('.derslik-item').forEach(function(item) {
                    var derslikId = item.querySelector('.derslik-select').value;
                    var gozetmenId = item.querySelector('.gozetmen-select').value;
                    if (!derslikId) return;

                    derslikler.push({
                        derslikId: parseInt(derslikId),
                        gozetmenId: gozetmenId ? parseInt(gozetmenId) : null
                    });
                });

                if (derslikler.length === 0) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Hata!',
                        text: 'En az bir derslik seçmelisiniz.'
                    });
                    return null;
                }

                return {
                    id: document.getElementById('sinavId').value || 0,
                    dbapId: parseInt(document.getElementById('dbapId').value),
                    sinavTarihi: document.getElementById('sinavTarihi').value,
                    sinavBaslangicSaati: document.getElementById('baslangicSaati').value,
                    sinavBitisSaati: document.getElementById('bitisSaati').value,
                    derslikler: derslikler
                };
            }

            function showEventDetails(event) {
                fetch(`/SinavDetay/GetEventDetails/${event.id}`)
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            var details = data.data;
                            var content = `
                                <h5>${details.sinavDetay.dersAd} - ${details.sinavDetay.bolumAd}</h5>
                                <p><strong>Akademik Personel:</strong> ${details.sinavDetay.akademikPersonelAd}</p>
                                <p><strong>Tarih:</strong> ${new Date(details.sinavDetay.sinavTarihi).toLocaleDateString('tr-TR')}</p>
                                <p><strong>Saat:</strong> ${details.sinavDetay.sinavBaslangicSaati} - ${details.sinavDetay.sinavBitisSaati}</p>
                                <h6>Derslikler:</h6>
                                <ul>
                            `;
                            details.derslikler.forEach(derslik => {
                                content += `<li>${derslik.derslikAd} (Gözetmen: ${derslik.gozetmenAd || 'Belirtilmemiş'})</li>`;
                            });
                            content += '</ul>';

                            Swal.fire({
                                title: 'Sınav Detayları',
                                html: content,
                                showCancelButton: true,
                                confirmButtonText: 'Düzenle',
                                cancelButtonText: 'Kapat'
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    openModalForEdit(details);
                                }
                            });
                        }
                    });
            }

            function openModalForNewEvent(date) {
                document.getElementById('sinavId').value = '';
                document.getElementById('sinavTarihi').value = date.toISOString().split('T')[0];
                document.getElementById('baslangicSaati').value = '09:00';
                document.getElementById('bitisSaati').value = '10:00';
                new bootstrap.Modal(document.getElementById('sinavModal')).show();
            }

            function openModalForEdit(details) {
                document.getElementById('sinavId').value = details.sinavDetay.id;
                document.getElementById('dbapId').value = details.sinavDetay.derBolumAkademikPersonelId;
                document.getElementById('sinavTarihi').value = new Date(details.sinavDetay.sinavTarihi).toISOString().split('T')[0];
                document.getElementById('baslangicSaati').value = details.sinavDetay.sinavBaslangicSaati;
                document.getElementById('bitisSaati').value = details.sinavDetay.sinavBitisSaati;

                // Derslikleri temizle ve yeniden oluştur
                var container = document.getElementById('derslikContainer');
                container.innerHTML = '';
                details.derslikler.forEach((derslik, index) => {
                    var template = document.querySelector('.derslik-item').cloneNode(true);
                    template.querySelector('.derslik-select').value = derslik.derslikId;
                    template.querySelector('.gozetmen-select').value = derslik.gozetmenId || '';
                    
                    if (index > 0) {
                        var removeButton = document.createElement('button');
                        removeButton.type = 'button';
                        removeButton.className = 'btn btn-danger btn-sm mt-2';
                        removeButton.innerHTML = '<i class="fas fa-trash"></i> Sil';
                        removeButton.onclick = function() {
                            template.remove();
                        };
                        template.appendChild(removeButton);
                    }
                    
                    container.appendChild(template);
                });

                new bootstrap.Modal(document.getElementById('sinavModal')).show();
            }

            function updateEvent(event) {
                var formData = {
                    id: event.id,
                    dbapId: event.extendedProps.dbapId,
                    sinavTarihi: event.start.toISOString().split('T')[0],
                    sinavBaslangicSaati: event.start.toLocaleTimeString('tr-TR', { hour: '2-digit', minute: '2-digit' }),
                    sinavBitisSaati: event.end.toLocaleTimeString('tr-TR', { hour: '2-digit', minute: '2-digit' }),
                    derslikler: event.extendedProps.derslikler
                };

                fetch('/SinavDetay/Update', {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(formData)
                })
                .then(response => response.json())
                .then(data => {
                    if (!data.success) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Hata!',
                            text: data.message
                        });
                        event.revert();
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    event.revert();
                });
            }
        });
    </script>
}
