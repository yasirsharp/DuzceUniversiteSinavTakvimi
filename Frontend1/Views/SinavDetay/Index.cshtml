@using Core.Utilities.Results
@using Entity.Concrete
@using Entity.DTOs
@using Microsoft.AspNetCore.Html
@{
    ViewData["Title"] = $"Sınav Detay {ViewData["BolumID"]}";
    var dbap = ViewData["DersBolumAkademikPersonel"] as IDataResult<List<DersBolumAkademikPersonel>>;
    var dbap_detail = ViewData["DersBolumAkademikPersonelDetails"] as IDataResult<List<DersBolumAkademikPersonelDTO>>;
    var sinavs = ViewData["SinavDetay"] as IDataResult<List<SinavDetayDTO>>;
    var derslikler = ViewData["Derslikler"] as IDataResult<List<Derslik>>;
}

<!-- Veri kontrolü için debug bilgisi ekleyelim -->
@if (sinavs?.Data == null)
{
    <div class="alert alert-warning">
        Sınav verisi bulunamadı!
    </div>
}

@section Styles {
    <!-- Bryntum Calendar CSS -->
    <link rel="stylesheet" href="https://bryntum.com/products/calendar/build/calendar.material.css" data-bryntum-theme>
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    <style>
        :root {
            --primary-color: #2c3e50;
            --secondary-color: #34495e;
            --accent-color: #3498db;
            --success-color: #2ecc71;
            --warning-color: #f1c40f;
            --danger-color: #e74c3c;
            --light-bg: #f8f9fa;
            --dark-bg: #2c3e50;
            --border-radius: 8px;
            --box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        body {
            background-color: var(--light-bg);
        }

        .main-container {
            padding: 2rem;
            max-width: 1800px;
            margin: 0 auto;
        }

        .calendar-container {
            background: white;
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
            height: calc(100vh - 140px);
            overflow: hidden;
        }

        .sidebar-container {
            background: white;
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
            height: calc(100vh - 140px);
            overflow: hidden;
        }

        .sticky-sidebar {
            position: sticky;
            top: 20px;
            max-height: calc(100vh - 160px);
            overflow-y: auto;
            padding: 1rem;
        }

        .card {
            border: none;
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
        }

        .card-header {
            background-color: var(--primary-color);
            color: white;
            border-radius: var(--border-radius) var(--border-radius) 0 0 !important;
            padding: 1rem;
        }

        .card-header h3 {
            margin: 0;
            font-size: 1.25rem;
            font-weight: 600;
        }

        .card-body {
            padding: 1.5rem;
        }

        .external-event {
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: white;
            padding: 1rem;
            margin-bottom: 1rem;
            border-radius: var(--border-radius);
            cursor: grab;
            transition: all 0.3s ease;
            box-shadow: var(--box-shadow);
            user-select: none;
            -webkit-user-select: none;
            -moz-user-select: none;
            touch-action: none;
        }

        .external-event.dragging {
            opacity: 0.5;
            transform: scale(0.95);
        }

        .external-event:active {
            cursor: grabbing;
        }

        .external-event:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
        }

        .external-event h5 {
            margin: 0 0 0.5rem 0;
            font-size: 1rem;
            font-weight: 600;
        }

        .external-event p {
            margin: 0;
            font-size: 0.9rem;
            opacity: 0.9;
        }

        .bolum-baslik {
            background: var(--secondary-color);
            color: white;
            padding: 1rem;
            margin: 1rem 0;
            border-radius: var(--border-radius);
            display: flex;
            justify-content: space-between;
            align-items: center;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .bolum-baslik:hover {
            background: var(--primary-color);
        }

        .bolum-baslik i {
            transition: transform 0.3s ease;
        }

        .bolum-baslik.collapsed i {
            transform: rotate(-180deg);
        }

        .select2-container--default .select2-selection--multiple {
            border-radius: var(--border-radius);
            border: 1px solid #ced4da;
            padding: 0.375rem;
        }

        .select2-container--default .select2-selection--multiple .select2-selection__choice {
            background-color: var(--accent-color);
            border: none;
            color: white;
            border-radius: 4px;
            padding: 2px 8px;
        }

        .select2-container--default .select2-selection--multiple .select2-selection__choice__remove {
            color: white;
            margin-right: 5px;
        }

        /* Animasyonlar */
        .external-event {
            animation: slideIn 0.3s ease-out;
        }

        @@keyframes slideIn {
            from {
                opacity: 0;
                transform: translateX(-20px);
            }
            to {
                opacity: 1;
                transform: translateX(0);
            }
        }

        /* Özel scrollbar */
        .sticky-sidebar::-webkit-scrollbar {
            width: 8px;
        }

        .sticky-sidebar::-webkit-scrollbar-track {
            background: #f1f1f1;
            border-radius: 4px;
        }

        .sticky-sidebar::-webkit-scrollbar-thumb {
            background: var(--secondary-color);
            border-radius: 4px;
        }

        .sticky-sidebar::-webkit-scrollbar-thumb:hover {
            background: var(--primary-color);
        }

        /* Derslik seçimi için özel stil */
        .derslik-filter-container {
            margin-bottom: 1.5rem;
        }

        .derslik-filter-container label {
            font-weight: 600;
            color: var(--primary-color);
            margin-bottom: 0.5rem;
            display: block;
        }

        /* Takvim container için özel stil */
        .calendar-wrapper {
            padding: 1rem;
            background: white;
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
            height: calc(100vh - 140px);
            display: flex;
            flex-direction: column;
        }

        #calendar {
            flex: 1;
            min-height: 0;
            height: 100%;
            overflow: auto;
            position: relative;
        }

        #calendar::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            pointer-events: none;
            background: rgba(255, 255, 255, 0.1);
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        #calendar.drag-over::before {
            opacity: 1;
        }

        .b-calendar {
            height: 100% !important;
        }

        .b-calendar .b-calendar-body {
            height: 100% !important;
        }
    </style>
}

<div class="main-container">
    @Html.AntiForgeryToken()
    <div class="row g-4">
        <div class="col-md-3">
            <div class="sidebar-container">
                <div class="sticky-sidebar">
                    <div class="card">
                        <div class="card-header">
                            <h3 class="card-title">
                                <i class="bi bi-calendar-event me-2"></i>
                                Sürüklenebilir Dersler
                            </h3>
                        </div>
                        <div class="card-body">
                            <div class="derslik-filter-container">
                                <label>
                                    <i class="bi bi-building me-2"></i>
                                    Derslik Seçimi
                                </label>
                                <select id="mainDerslikFilter" class="form-control js-example-basic-multiple">
                                    @foreach (var derslik in derslikler.Data)
                                    {
                                        <option value="@derslik.Id">@derslik.Ad (@derslik.Kapasite)</option>
                                    }
                                </select>
                            </div>
                            
                            <div id="external-events">
                                @{
                                    var gruplanmisDersler = dbap_detail.Data
                                        .GroupBy(x => x.BolumId)
                                        .Select(g => new
                                        {
                                            BolumId = g.Key,
                                            BolumAd = g.First().BolumAd,
                                            Dersler = g.GroupBy(d => d.Id)
                                                      .Select(d => d.First())
                                                      .OrderBy(d => d.DersAd)
                                        })
                                        .OrderBy(x => x.BolumAd);
                                }
                                
                                @foreach (var bolum in gruplanmisDersler)
                                {
                                    <div class="bolum-grup">
                                        <div class="bolum-baslik" onclick="toggleDersler(this)">
                                            <span>
                                                <i class="bi bi-building me-2"></i>@bolum.BolumAd
                                            </span>
                                            <i class="bi bi-chevron-down"></i>
                                        </div>
                                        <div class="bolum-dersler" id="sinav-source">
                                            @foreach (var ders in bolum.Dersler)
                                            {
                                                <div class="external-event fc-event" 
                                                     data-id="@ders.Id" 
                                                     data-ders-id="@ders.DersId"
                                                     data-bolum-id="@ders.BolumId"
                                                     draggable="true">
                                                    <h5>@ders.DersAd</h5>
                                                    <p>@ders.AkademikPersonelAd</p>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-9">
            <div class="calendar-wrapper">
                <div id="calendar"></div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <!-- Bryntum Calendar -->
    <script src="https://bryntum.com/products/calendar/build/calendar.umd.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <!-- SheetJS -->
    <script src="https://cdn.sheetjs.com/xlsx-0.19.3/package/dist/xlsx.full.min.js"></script>

    <!-- Takvim için gerekli verileri global değişkenlere aktar -->
    <script>
        const INITIAL_DATA = {
            derslikler: @Html.Raw(Json.Serialize(derslikler.Data)),
            dbapDetail: @Html.Raw(Json.Serialize(dbap_detail.Data)),
            sinavlar: @Html.Raw(Json.Serialize(sinavs.Data)),
            akademikPersoneller: @Html.Raw(Json.Serialize(ViewData["AkademikPersoneller"])),
            bolumId: @Html.Raw(Json.Serialize(ViewData["BolumID"]))
        };

        // Bölüm açma/kapama fonksiyonu
        function toggleDersler(element) {
            const derslerDiv = element.nextElementSibling;
            element.classList.toggle('collapsed');
            derslerDiv.style.display = derslerDiv.style.display === 'none' ? 'block' : 'none';
        }
    </script>

    <!-- Takvim yönetimi için özel JavaScript -->
    <script src="~/js/sinavTakvimi.js"></script>
}
