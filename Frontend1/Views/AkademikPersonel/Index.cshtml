@model IEnumerable<Entity.Concrete.AkademikPersonel>

@{
    ViewData["Title"] = "Akademik Personel Yönetimi";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">Akademik Personel Listesi</h3>
                    <div class="card-tools">
                        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#akademikPersonelModal">
                            <i class="bi bi-plus-circle"></i> Yeni Akademik Personel
                        </button>
                    </div>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table id="akademikPersonelTable" class="table table-bordered table-striped">
                            <thead>
                                <tr>
                                    <th>ID</th>
                                    <th>Ad</th>
                                    <th>Unvan</th>
                                    <th>İşlemler</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var personel in Model)
                                {
                                    <tr>
                                        <td>@personel.Id</td>
                                        <td>@personel.Ad</td>
                                        <td>@personel.Unvan</td>
                                        <td>
                                            <button class="btn btn-sm btn-info edit-personel" data-user-id="@personel.UserId" data-id="@personel.Id">
                                                <i class="bi bi-pencil"></i> Düzenle
                                            </button>
                                            <button class="btn btn-sm btn-danger delete-personel" data-user-id="@personel.UserId" data-ad="@personel.Ad" data-unvan="@personel.Unvan" data-id="@personel.Id">
                                                <i class="bi bi-trash"></i> Sil
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Akademik Personel Modal -->
<div class="modal fade" id="akademikPersonelModal" tabindex="-1" aria-labelledby="akademikPersonelModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="akademikPersonelModalLabel">Akademik Personel</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="akademikPersonelForm">
                    <input type="hidden" id="personelId" />
                    <input type="hidden" id="personelUserId" />
                    <div class="mb-3">
                        <label for="personelAd" class="form-label">Ad</label>
                        <input type="text" class="form-control" id="personelAd" required>
                    </div>
                    <div class="mb-3">
                        <label for="personelUnvan" class="form-label">Unvan</label>
                        <input type="text" class="form-control" id="personelUnvan" required>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">İptal</button>
                <button type="button" class="btn btn-primary" id="savePersonel">Kaydet</button>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .table-responsive {
            overflow-x: auto;
        }
        .btn-sm {
            padding: 0.25rem 0.5rem;
            font-size: 0.875rem;
        }
        .card-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        .card-tools {
            display: flex;
            gap: 0.5rem;
        }
    </style>
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            console.log("DOM yüklendi");
            
            // DataTable initialization
            var table = $('#akademikPersonelTable').DataTable({
                "language": {
                    "url": "//cdn.datatables.net/plug-ins/1.10.24/i18n/Turkish.json"
                },
                "responsive": true,
                "autoWidth": false
            });

            // Yeni akademik personel ekleme
            document.getElementById('savePersonel').addEventListener('click', function() {
                var personel = {
                    id: parseInt(document.getElementById('personelId').value) || 0,
                    ad: document.getElementById('personelAd').value,
                    unvan: document.getElementById('personelUnvan').value,
                    userId: parseInt(document.getElementById('personelUserId').value) || 0
                };

                console.log("Kaydedilecek personel:", personel);

                var url = personel.id > 0 ? '/AkademikPersonel/Update' : '/AkademikPersonel/Add';
                var method = 'POST';

                $.ajax({
                    url: url,
                    type: method,
                    contentType: 'application/json',
                    data: JSON.stringify(personel),
                    success: function (response) {
                        console.log("Sunucu yanıtı:", response);
                        if (response.success) {
                            Swal.fire({
                                title: 'Başarılı!',
                                text: response.message,
                                icon: 'success',
                                timer: 1500,
                                showConfirmButton: false
                            }).then(() => {
                                location.reload();
                            });
                        } else {
                            Swal.fire({
                                title: 'Hata!',
                                text: response.message,
                                icon: 'error'
                            });
                        }
                    },
                    error: function (xhr) {
                        console.error("Sunucu hatası:", xhr);
                        Swal.fire({
                            title: 'Hata!',
                            text: 'Bir hata oluştu: ' + xhr.responseText,
                            icon: 'error'
                        });
                    }
                });
            });

            // Akademik personel düzenleme
            document.querySelectorAll('.edit-personel').forEach(function(button) {
                button.addEventListener('click', function() {
                    console.log("Düzenle butonuna tıklandı");
                    var id = this.getAttribute('data-id');
                    console.log("Düzenlenecek personel ID:", id);
                    
                    $.ajax({
                        url: '/AkademikPersonel/GetById/' + id,
                        type: 'GET',
                        success: function(response) {
                            console.log("Gelen personel verisi:", response);
                            if (response.success) {
                                var personel = response.data;
                                document.getElementById('personelId').value = personel.id;
                                document.getElementById('personelAd').value = personel.ad;
                                document.getElementById('personelUnvan').value = personel.unvan;
                                document.getElementById('personelUserId').value = personel.userId;

                                var modal = new bootstrap.Modal(document.getElementById('akademikPersonelModal'));
                                modal.show();
                            } else {
                                Swal.fire({
                                    title: 'Hata!',
                                    text: response.message,
                                    icon: 'error'
                                });
                            }
                        },
                        error: function(xhr) {
                            console.error("Personel getirme hatası:", xhr);
                            Swal.fire({
                                title: 'Hata!',
                                text: 'Personel bilgileri alınamadı: ' + xhr.responseText,
                                icon: 'error'
                            });
                        }
                    });
                });
            });

            // Akademik personel silme
            document.querySelectorAll('.delete-personel').forEach(function(button) {
                button.addEventListener('click', function() {
                    console.log("Sil butonuna tıklandı");
                    var id = this.getAttribute('data-id');
                    var userId = this.getAttribute('data-user-id');
                    var ad = this.getAttribute('data-ad');
                    var unvan = this.getAttribute('data-unvan');
                    var personel = {
                        id: id,
                        userId: userId,
                        ad: ad,
                        unvan: unvan
                    };
                    Swal.fire({
                        title: 'Emin misiniz?',
                        text: "Bu akademik personeli silmek istediğinizden emin misiniz?",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Evet, sil!',
                        cancelButtonText: 'İptal'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            $.ajax({
                                url: '/AkademikPersonel/Delete',
                                type: 'POST',
                                contentType: 'application/json',
                                data: JSON.stringify(personel),
                                success: function (response) {
                                    if (response.success) {
                                        Swal.fire({
                                            title: 'Başarılı!',
                                            text: response.message,
                                            icon: 'success',
                                            timer: 1500,
                                            showConfirmButton: false
                                        }).then(() => {
                                            location.reload();
                                        });
                                    } else {
                                        Swal.fire({
                                            title: 'Hata!',
                                            text: response.message,
                                            icon: 'error'
                                        });
                                    }
                                },
                                error: function (xhr) {
                                    Swal.fire({
                                        title: 'Hata!',
                                        text: 'Bir hata oluştu: ' + xhr.responseText,
                                        icon: 'error'
                                    });
                                }
                            });
                        }
                    });
                });
            });

            // Modal kapandığında formu temizle
            document.getElementById('akademikPersonelModal').addEventListener('hidden.bs.modal', function () {
                document.getElementById('akademikPersonelForm').reset();
                document.getElementById('personelId').value = '';
            });
        });
    </script>
}
